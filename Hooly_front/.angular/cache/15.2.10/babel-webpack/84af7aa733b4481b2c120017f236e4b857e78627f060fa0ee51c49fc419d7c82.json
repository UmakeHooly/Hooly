{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/foodtruck/foodtruck.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction AccueilComponent_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const foodtruck_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", foodtruck_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(foodtruck_r2.nom);\n  }\n}\nfunction AccueilComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.dateText);\n  }\n}\nexport class AccueilComponent {\n  constructor(foodtruckService, router) {\n    this.foodtruckService = foodtruckService;\n    this.router = router;\n    this.foodtrucks = [];\n    this.selectedFoodtruck = null;\n    this.isDateValid = false;\n    this.reservationDate = null;\n    this.reservationForm = false;\n    this.dateText = 'Veuillez sélectionner une date dans le futur.';\n    this.response = null;\n  }\n  ngOnInit() {\n    this.loadFoodtrucks();\n  }\n  loadFoodtrucks() {\n    this.foodtruckService.getAllFoodtrucks().subscribe({\n      next: foodtrucks => {\n        this.foodtrucks = foodtrucks;\n      },\n      error: error => {\n        console.error('Error loading foodtrucks:', error);\n      }\n    });\n  }\n  checkDate(value) {\n    const selectedDate = new Date(value);\n    const today = new Date();\n    this.isDateValid = selectedDate > today;\n  }\n  onSubmit() {\n    if (!this.isDateValid) {\n      alert('Veuillez sélectionner une date dans le futur.');\n      return;\n    } else {\n      const formData = new FormData();\n      formData.append('date', this.reservationDate);\n      formData.append('foodtruck', this.selectedFoodtruck);\n      this.foodtruckService.addReservation(formData).subscribe({\n        next: response => {\n          this.response = response;\n        },\n        error: error => {\n          if (error.error instanceof ErrorEvent) {\n            // Une erreur côté client ou réseau s'est produite. Traiter ici.\n            this.response = `Erreur côté client: ${error.error.message}`;\n          } else {\n            // Le backend a retourné une réponse d'échec.\n            // Le serveur peut retourner des réponses d'échec qui sont traitées ici par le bloc `error`.\n            this.response = error.error;\n          }\n        }\n      });\n    }\n  }\n  static #_ = this.ɵfac = function AccueilComponent_Factory(t) {\n    return new (t || AccueilComponent)(i0.ɵɵdirectiveInject(i1.FoodtruckService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AccueilComponent,\n    selectors: [[\"app-accueil\"]],\n    decls: 15,\n    vars: 6,\n    consts: [[1, \"form-group\", 3, \"ngSubmit\"], [\"for\", \"foodtruck\", 1, \"form-label\"], [\"name\", \"foodtruck\", 1, \"form-select\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"date\", 1, \"form-label\"], [\"name\", \"date\", \"type\", \"date\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"form-text text-danger\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"mt-3\"], [3, \"value\"], [1, \"form-text\", \"text-danger\"]],\n    template: function AccueilComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function AccueilComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\")(2, \"label\", 1);\n        i0.ɵɵtext(3, \"S\\u00E9lectionnez votre foodtruck\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"select\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function AccueilComponent_Template_select_ngModelChange_4_listener($event) {\n          return ctx.selectedFoodtruck = $event;\n        });\n        i0.ɵɵtemplate(5, AccueilComponent_option_5_Template, 2, 2, \"option\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\")(7, \"label\", 4);\n        i0.ɵɵtext(8, \"Jour de r\\u00E9servation\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function AccueilComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.reservationDate = $event;\n        })(\"ngModelChange\", function AccueilComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.checkDate($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, AccueilComponent_div_10_Template, 2, 1, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 7);\n        i0.ɵɵtext(12, \"R\\u00E9server\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"h2\", 8);\n        i0.ɵɵtext(14);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedFoodtruck);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.foodtrucks);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.reservationDate);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isDateValid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !ctx.isDateValid);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.response);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","AccueilComponent","constructor","foodtruckService","router","ngOnInit","loadFoodtrucks","getAllFoodtrucks","subscribe","next","foodtrucks","error","console","checkDate","value","selectedDate","Date","today","isDateValid","onSubmit","alert","formData","FormData","append","reservationDate","selectedFoodtruck","addReservation","response","ErrorEvent","message","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\xampp\\htdocs\\umake\\Hooly\\Hooly_front\\src\\app\\accueil\\accueil.component.html","D:\\xampp\\htdocs\\umake\\Hooly\\Hooly_front\\src\\app\\accueil\\accueil.component.ts"],"sourcesContent":["<form (ngSubmit)=\"onSubmit()\" class=\"form-group\">\n    <div>\n      <label for=\"foodtruck\" class=\"form-label\">Sélectionnez votre foodtruck</label>\n      <select class=\"form-select\" [(ngModel)]=\"selectedFoodtruck\" name=\"foodtruck\">\n        <option *ngFor=\"let foodtruck of foodtrucks\" [value]=\"foodtruck.id\">{{ foodtruck.nom }}</option>\n      </select>\n    </div>\n    <div>\n      <label for=\"date\" class=\"form-label\">Jour de réservation</label>\n      <input class=\"form-control\" name=\"date\" type=\"date\" [(ngModel)]=\"reservationDate\" (ngModelChange)=\"checkDate($event)\" required>\n      <div *ngIf=\"!isDateValid\" class=\"form-text text-danger\">{{dateText}}</div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!isDateValid\">Réserver</button>\n  </form>\n  \n  <h2 class=\"mt-3\">{{response}}</h2>\n  \n","import { Component, OnInit } from '@angular/core';\nimport { FoodtruckService } from '../services/foodtruck/foodtruck.service';\nimport { tap } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-accueil',\n  templateUrl: './accueil.component.html',\n  styleUrls: ['./accueil.component.css']\n})\nexport class AccueilComponent implements OnInit {\n\n  foodtrucks: any = [];\n  selectedFoodtruck:any=null;\n  isDateValid: boolean = false;\n  reservationDate:any=null;\n  reservationForm:boolean=false;\n  dateText:any='Veuillez sélectionner une date dans le futur.'\n  response:any=null;\n\n  constructor(private foodtruckService: FoodtruckService,private router: Router) { }\n\n  ngOnInit(): void {\n    this.loadFoodtrucks();\n  }\n\n  loadFoodtrucks(): void {\n    this.foodtruckService.getAllFoodtrucks().subscribe({\n      next: (foodtrucks) => {\n        this.foodtrucks = foodtrucks;\n      },\n      error: (error) => {\n        console.error('Error loading foodtrucks:', error);\n      },\n      \n    });\n  }\n\n  checkDate(value: string): void {\n    const selectedDate = new Date(value);\n    const today = new Date();\n    this.isDateValid = selectedDate > today;\n  }\n\n  onSubmit(): void {\n    if (!this.isDateValid) {\n      alert('Veuillez sélectionner une date dans le futur.');\n      return;\n    }\n    else{\n      const formData = new FormData();\n      formData.append('date', this.reservationDate);\n      formData.append('foodtruck', this.selectedFoodtruck);\n      this.foodtruckService.addReservation(formData).subscribe({\n        next: (response) => {\n          this.response = response;\n        },\n        error: (error) => {\n          if (error.error instanceof ErrorEvent) {\n            // Une erreur côté client ou réseau s'est produite. Traiter ici.\n            this.response = `Erreur côté client: ${error.error.message}`;\n          } else {\n            // Le backend a retourné une réponse d'échec.\n            // Le serveur peut retourner des réponses d'échec qui sont traitées ici par le bloc `error`.\n            this.response = error.error ;\n          }\n        },\n        \n      });\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}