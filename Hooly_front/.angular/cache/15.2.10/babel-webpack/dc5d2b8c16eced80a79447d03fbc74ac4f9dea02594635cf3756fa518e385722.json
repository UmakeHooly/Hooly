{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/foodtruck/foodtruck.service\";\nimport * as i2 from \"@angular/router\";\nexport class AccueilComponent {\n  constructor(foodtruckService, router) {\n    this.foodtruckService = foodtruckService;\n    this.router = router;\n    this.foodtrucks = [];\n  }\n  ngOnInit() {\n    this.loadFoodtrucks();\n  }\n  loadFoodtrucks() {\n    this.foodtruckService.getAllFoodtrucks().subscribe({\n      next: foodtrucks => {\n        // Traitement en cas de succès\n        localStorage.setItem('foodtrucks', JSON.stringify(foodtrucks));\n        this.foodtrucks = foodtrucks;\n      },\n      error: error => {\n        // Traitement en cas d'erreur\n        console.error('Error loading foodtrucks:', error);\n      },\n      complete: () => {\n        // Code à exécuter après la complétion de l'Observable\n        // Ce bloc est optionnel\n      }\n    });\n  }\n  static #_ = this.ɵfac = function AccueilComponent_Factory(t) {\n    return new (t || AccueilComponent)(i0.ɵɵdirectiveInject(i1.FoodtruckService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AccueilComponent,\n    selectors: [[\"app-accueil\"]],\n    decls: 2,\n    vars: 0,\n    template: function AccueilComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"accueil works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;AAUA,OAAM,MAAOA,gBAAgB;EAI3BC,YAAoBC,gBAAkC,EAASC,MAAc;IAAzD,qBAAgB,GAAhBD,gBAAgB;IAA2B,WAAM,GAANC,MAAM;IAFrE,eAAU,GAAQ,EAAE;EAE6D;EAEjFC,QAAQ;IACN,IAAI,CAACC,cAAc,EAAE;EACvB;EAEAA,cAAc;IACZ,IAAI,CAACH,gBAAgB,CAACI,gBAAgB,EAAE,CAACC,SAAS,CAAC;MACjDC,IAAI,EAAGC,UAAU,IAAI;QACnB;QACAC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAACJ,UAAU,CAAC,CAAC;QAC9D,IAAI,CAACA,UAAU,GAAGA,UAAU;MAC9B,CAAC;MACDK,KAAK,EAAGA,KAAK,IAAI;QACf;QACAC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD,CAAC;MACDE,QAAQ,EAAE,MAAK;QACb;QACA;MAAA;KAEH,CAAC;EACJ;EAAC;qBA1BUhB,gBAAgB;EAAA;EAAA;UAAhBA,gBAAgB;IAAAiB;IAAAC;IAAAC;IAAAC;MAAA;QCV7BC,yBAAG;QAAAA,8BAAc;QAAAA,iBAAI","names":["AccueilComponent","constructor","foodtruckService","router","ngOnInit","loadFoodtrucks","getAllFoodtrucks","subscribe","next","foodtrucks","localStorage","setItem","JSON","stringify","error","console","complete","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["D:\\xampp\\htdocs\\umake\\Hooly\\Hooly_front\\src\\app\\accueil\\accueil.component.ts","D:\\xampp\\htdocs\\umake\\Hooly\\Hooly_front\\src\\app\\accueil\\accueil.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FoodtruckService } from '../services/foodtruck/foodtruck.service';\nimport { tap } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-accueil',\n  templateUrl: './accueil.component.html',\n  styleUrls: ['./accueil.component.css']\n})\nexport class AccueilComponent implements OnInit {\n\n  foodtrucks: any = [];\n\n  constructor(private foodtruckService: FoodtruckService,private router: Router) { }\n\n  ngOnInit(): void {\n    this.loadFoodtrucks();\n  }\n\n  loadFoodtrucks(): void {\n    this.foodtruckService.getAllFoodtrucks().subscribe({\n      next: (foodtrucks) => {\n        // Traitement en cas de succès\n        localStorage.setItem('foodtrucks', JSON.stringify(foodtrucks));\n        this.foodtrucks = foodtrucks;\n      },\n      error: (error) => {\n        // Traitement en cas d'erreur\n        console.error('Error loading foodtrucks:', error);\n      },\n      complete: () => {\n        // Code à exécuter après la complétion de l'Observable\n        // Ce bloc est optionnel\n      }\n    });\n  }\n","<p>accueil works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}