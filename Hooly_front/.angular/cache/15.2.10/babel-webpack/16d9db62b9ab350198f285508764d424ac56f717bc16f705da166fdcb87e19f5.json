{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/foodtruck/foodtruck.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction AccueilComponent_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const foodtruck_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", foodtruck_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(foodtruck_r2.nom);\n  }\n}\nfunction AccueilComponent_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.dateText);\n  }\n}\nexport class AccueilComponent {\n  constructor(foodtruckService, router) {\n    this.foodtruckService = foodtruckService;\n    this.router = router;\n    this.foodtrucks = [];\n    this.selectedFoodtruck = null;\n    this.isDateValid = true;\n    this.reservationDate = null;\n    this.reservationForm = false;\n    this.dateText = 'Veuillez sélectionner une date dans le futur.';\n  }\n  ngOnInit() {\n    this.loadFoodtrucks();\n  }\n  loadFoodtrucks() {\n    this.foodtruckService.getAllFoodtrucks().subscribe({\n      next: foodtrucks => {\n        // Traitement en cas de succès\n        this.foodtrucks = foodtrucks;\n      },\n      error: error => {\n        // Traitement en cas d'erreur\n        console.error('Error loading foodtrucks:', error);\n      }\n    });\n  }\n  checkDate(value) {\n    const selectedDate = new Date(value);\n    const today = new Date();\n    this.isDateValid = selectedDate > today;\n  }\n  submitForm() {\n    if (!this.isDateValid) {\n      alert('Veuillez sélectionner une date dans le futur.');\n      return;\n    }\n  }\n  static #_ = this.ɵfac = function AccueilComponent_Factory(t) {\n    return new (t || AccueilComponent)(i0.ɵɵdirectiveInject(i1.FoodtruckService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AccueilComponent,\n    selectors: [[\"app-accueil\"]],\n    decls: 11,\n    vars: 5,\n    consts: [[\"for\", \"foodtruck\"], [\"name\", \"foodtruck\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"date\"], [\"name\", \"date\", \"type\", \"date\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 3, \"disabled\"], [\"color\", \"red\", 4, \"ngIf\"], [3, \"value\"], [\"color\", \"red\"]],\n    template: function AccueilComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\")(1, \"label\", 0);\n        i0.ɵɵtext(2, \"S\\u00E9lectionnez votre foodtruck\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"select\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function AccueilComponent_Template_select_ngModelChange_3_listener($event) {\n          return ctx.selectedFoodtruck = $event;\n        });\n        i0.ɵɵtemplate(4, AccueilComponent_option_4_Template, 2, 2, \"option\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Jour de r\\u00E9servation\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function AccueilComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.reservationDate = $event;\n        })(\"ngModelChange\", function AccueilComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.checkDate($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"button\", 5);\n        i0.ɵɵtext(9, \"R\\u00E9server\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, AccueilComponent_span_10_Template, 2, 1, \"span\", 6);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedFoodtruck);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.foodtrucks);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.reservationDate);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.isDateValid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isDateValid);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;;IAGQA,iCAAoE;IAAAA,YAAmB;IAAAA,iBAAS;;;;IAAnDA,uCAAsB;IAACA,eAAmB;IAAnBA,sCAAmB;;;;;IAKzFA,+BAAqC;IAAAA,YAAY;IAAAA,iBAAO;;;;IAAnBA,eAAY;IAAZA,qCAAY;;;ACEvD,OAAM,MAAOC,gBAAgB;EAS3BC,YAAoBC,gBAAkC,EAASC,MAAc;IAAzD,qBAAgB,GAAhBD,gBAAgB;IAA2B,WAAM,GAANC,MAAM;IAPrE,eAAU,GAAQ,EAAE;IACpB,sBAAiB,GAAK,IAAI;IAC1B,gBAAW,GAAY,IAAI;IAC3B,oBAAe,GAAK,IAAI;IACxB,oBAAe,GAAS,KAAK;IAC7B,aAAQ,GAAK,+CAA+C;EAEqB;EAEjFC,QAAQ;IACN,IAAI,CAACC,cAAc,EAAE;EACvB;EAEAA,cAAc;IACZ,IAAI,CAACH,gBAAgB,CAACI,gBAAgB,EAAE,CAACC,SAAS,CAAC;MACjDC,IAAI,EAAGC,UAAU,IAAI;QACnB;QACA,IAAI,CAACA,UAAU,GAAGA,UAAU;MAC9B,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAI;QACf;QACAC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;KAED,CAAC;EACJ;EAEAE,SAAS,CAACC,KAAa;IACrB,MAAMC,YAAY,GAAG,IAAIC,IAAI,CAACF,KAAK,CAAC;IACpC,MAAMG,KAAK,GAAG,IAAID,IAAI,EAAE;IACxB,IAAI,CAACE,WAAW,GAAGH,YAAY,GAAGE,KAAK;EACzC;EAEAE,UAAU;IACR,IAAI,CAAC,IAAI,CAACD,WAAW,EAAE;MACrBE,KAAK,CAAC,+CAA+C,CAAC;MACtD;;EAEJ;EAAC;qBAxCUnB,gBAAgB;EAAA;EAAA;UAAhBA,gBAAgB;IAAAoB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDV7BzB,4BAAM;QACqBA,iDAA4B;QAAAA,iBAAQ;QAC3DA,iCAA8E;QAAjDA;UAAA;QAAA,EAA+B;QACxDA,uEAAgG;QAClGA,iBAAS;QACTA,gCAAkB;QAAAA,wCAAmB;QAAAA,iBAAQ;QAC7CA,gCAA0G;QAA3EA;UAAA;QAAA,EAA6B;UAAA,OAAkB0B,qBAAiB;QAAA,EAAnC;QAA5D1B,iBAA0G;QAC1GA,iCAA+C;QAAAA,6BAAQ;QAAAA,iBAAS;QAChEA,qEAAwD;QAC9DA,iBAAO;;;QAP0BA,eAA+B;QAA/BA,+CAA+B;QAC1BA,eAAa;QAAbA,wCAAa;QAGdA,eAA6B;QAA7BA,6CAA6B;QACtCA,eAAwB;QAAxBA,0CAAwB;QAC7BA,eAAkB;QAAlBA,uCAAkB","names":["i0","AccueilComponent","constructor","foodtruckService","router","ngOnInit","loadFoodtrucks","getAllFoodtrucks","subscribe","next","foodtrucks","error","console","checkDate","value","selectedDate","Date","today","isDateValid","submitForm","alert","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\xampp\\htdocs\\umake\\Hooly\\Hooly_front\\src\\app\\accueil\\accueil.component.html","D:\\xampp\\htdocs\\umake\\Hooly\\Hooly_front\\src\\app\\accueil\\accueil.component.ts"],"sourcesContent":["<form>\n    <label for=\"foodtruck\">Sélectionnez votre foodtruck</label>\n    <select class=\"form-control\" [(ngModel)]=\"selectedFoodtruck\" name=\"foodtruck\">\n        <option *ngFor=\"let foodtruck of foodtrucks\" [value]=\"foodtruck.id\">{{ foodtruck.nom }}</option>\n      </select>\n      <label for=\"date\">Jour de réservation</label>\n      <input name=\"date\" type=\"date\" [(ngModel)]=\"reservationDate\" (ngModelChange)=\"checkDate($event)\" required>\n      <button type=\"submit\" [disabled]=\"isDateValid\">Réserver</button>\n      <span color=red *ngIf=\"!isDateValid\">{{dateText}}</span>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { FoodtruckService } from '../services/foodtruck/foodtruck.service';\nimport { tap } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-accueil',\n  templateUrl: './accueil.component.html',\n  styleUrls: ['./accueil.component.css']\n})\nexport class AccueilComponent implements OnInit {\n\n  foodtrucks: any = [];\n  selectedFoodtruck:any=null;\n  isDateValid: boolean = true;\n  reservationDate:any=null;\n  reservationForm:boolean=false;\n  dateText:any='Veuillez sélectionner une date dans le futur.'\n\n  constructor(private foodtruckService: FoodtruckService,private router: Router) { }\n\n  ngOnInit(): void {\n    this.loadFoodtrucks();\n  }\n\n  loadFoodtrucks(): void {\n    this.foodtruckService.getAllFoodtrucks().subscribe({\n      next: (foodtrucks) => {\n        // Traitement en cas de succès\n        this.foodtrucks = foodtrucks;\n      },\n      error: (error) => {\n        // Traitement en cas d'erreur\n        console.error('Error loading foodtrucks:', error);\n      },\n      \n    });\n  }\n\n  checkDate(value: string): void {\n    const selectedDate = new Date(value);\n    const today = new Date();\n    this.isDateValid = selectedDate > today;\n  }\n\n  submitForm(): void {\n    if (!this.isDateValid) {\n      alert('Veuillez sélectionner une date dans le futur.');\n      return;\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}